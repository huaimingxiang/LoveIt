[{"categories":["学习"],"content":"Spring Boot是由Pivotal团队提供的全新框架，其设计目的是用来简化新Spring应用的初始搭建以及开发过程。","date":"2021-12-16","objectID":"/2021-12-16/","tags":["sprint boot"],"title":"Spring boot学习第一天总结","uri":"/2021-12-16/"},{"categories":["学习"],"content":"1.语法问题 hashmap等数据结构，参数是范型，不需要传入对应的类型，HashMap\u003c\u003e； @RequestMapping(value = \"mapValue\") @ResponseBody public Map\u003cString,Object\u003e mapValue(){ //Map\u003cString,Object\u003e retMap = new HashMap\u003cString,Object\u003e(); Map\u003cString,Object\u003e retMap = new HashMap\u003c\u003e(); retMap.put(\"message:\",\"Spring boot\"); return retMap; } ","date":"2021-12-16","objectID":"/2021-12-16/:1:0","tags":["sprint boot"],"title":"Spring boot学习第一天总结","uri":"/2021-12-16/"},{"categories":["学习"],"content":"2.语法差异 Controller层注入Service层，Service层注入Dao层，通过@Autowired来自动注入； Springboot官方建议使用final来修饰成员变量，然后通过构造方法来进行注入； @Controller public class IndexController { //@Autowired //private Define define; private final Define define; .... } ","date":"2021-12-16","objectID":"/2021-12-16/:2:0","tags":["sprint boot"],"title":"Spring boot学习第一天总结","uri":"/2021-12-16/"},{"categories":["学习"],"content":"3.核心文件配置 多核心配置文件，支持多环境配置文件的切换 ","date":"2021-12-16","objectID":"/2021-12-16/:3:0","tags":["sprint boot"],"title":"Spring boot学习第一天总结","uri":"/2021-12-16/"},{"categories":["学习"],"content":"4.多文件配置 自定义核心配置文件 对于报警信息，可以通过增加配置依赖来解决 define: name: huaimingxiang password: Cpic831205 \u003c!-- config配置依赖 --\u003e \u003cdependency\u003e \u003cgroupId\u003e org.springframework.boot\u003c/groupId\u003e \u003cartifactId\u003espring-boot-configuration-processor\u003c/artifactId\u003e \u003coptional\u003etrue\u003c/optional\u003e \u003c/dependency\u003e https://www.huaimingxiang.site/ ","date":"2021-12-16","objectID":"/2021-12-16/:4:0","tags":["sprint boot"],"title":"Spring boot学习第一天总结","uri":"/2021-12-16/"}]